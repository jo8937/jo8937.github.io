{"version":3,"sources":["webpack:///./src/templates/tags/index.jsx","webpack:///./src/templates/tags/tags.module.less"],"names":["TagPage","data","tag","pageContext","tagName","Utils","capitalize","tagPagePath","Config","pages","posts","allMarkdownRemark","edges","className","title","description","path","resolvePageUrl","keywords","style","tagsList","gutter","map","post","key","xs","sm","md","lg","module","exports"],"mappings":"+TAwHeA,UAtGC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KACTC,EADiC,EAAlBC,YACfD,IACFE,EAAUC,IAAMC,WAAWJ,GAC3BK,EAAcC,IAAOC,MAAMP,IAC3BQ,EAAQT,EAAKU,kBAAkBC,MACrC,OACE,uBAAQC,UAAU,gBAChB,uBAAQA,UAAU,aAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,MAAOV,EACPW,YAAW,kBAAoBX,EAC/BY,KAAMX,IAAMY,eAAeV,EAAaL,GACxCgB,SAAU,CAACd,KAEb,kBAAC,IAAD,KACE,yBAAKS,UAAS,kBAAoBM,IAAMC,UACtC,gCAEGhB,IAGL,uBAAKiB,OAAQ,CAAC,GAAI,KACfX,EAAMY,KAAI,SAACC,EAAMC,GAAP,OAET,uBAAKA,IAAKA,EAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACzC,kBAAC,IAAD,CAAU3B,KAAMsB,c,qBC3ChCM,EAAOC,QAAU,CAAC,SAAW,+BAA+B,mBAAqB,yCAAyC,UAAY","file":"component---src-templates-tags-index-jsx-3723a8edf4f69dff5166.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\r\n/* Vendor imports */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { graphql } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport {\r\n  Layout, Row, Col,\r\n} from 'antd';\r\n/* App imports */\r\nimport SEO from '../../components/Seo';\r\nimport Header from '../../components/PageLayout/Header';\r\nimport PostCard from '../../components/PostCard';\r\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\r\nimport Config from '../../../config';\r\nimport Utils from '../../utils/pageUtils';\r\nimport style from './tags.module.less';\r\n\r\nconst TagPage = ({ data, pageContext }) => {\r\n  const { tag } = pageContext;\r\n  const tagName = Utils.capitalize(tag);\r\n  const tagPagePath = Config.pages.tag;\r\n  const posts = data.allMarkdownRemark.edges;\r\n  return (\r\n    <Layout className=\"outerPadding\">\r\n      <Layout className=\"container\">\r\n        <Header />\r\n        <SEO\r\n          title={tagName}\r\n          description={`All post about ${tagName}`}\r\n          path={Utils.resolvePageUrl(tagPagePath, tag)}\r\n          keywords={[tagName]}\r\n        />\r\n        <SidebarWrapper>\r\n          <div className={`marginTopTitle ${style.tagsList}`}>\r\n            <h1>\r\n              #\r\n              {tagName}\r\n            </h1>\r\n          </div>\r\n          <Row gutter={[20, 20]}>\r\n            {posts.map((post, key) => (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n              <Col key={key} xs={24} sm={24} md={12} lg={8}>\r\n                <PostCard data={post} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </SidebarWrapper>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nTagPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    }).isRequired,\r\n    allFile: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            childImageSharp: PropTypes.shape({\r\n              fluid: PropTypes.object.isRequired,\r\n            }).isRequired,\r\n          }).isRequired,\r\n        }),\r\n      ).isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String!) {\r\n    allMarkdownRemark(\r\n      filter: {\r\n        frontmatter: { tags: { in: [$tag] } }\r\n        fileAbsolutePath: { regex: \"/index.md$/\" }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            tags\r\n            excerpt\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 600) {\r\n                  ...GatsbyImageSharpFluid_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allFile(filter: { name: { eq: $tag }, dir: { regex: \"/tags$/\" } }) {\r\n      edges {\r\n        node {\r\n          name\r\n          childImageSharp {\r\n            fluid(maxHeight: 600) {\r\n              ...GatsbyImageSharpFluid_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TagPage;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagsList\":\"tags-module--tagsList--1zRDU\",\"bannerImgContainer\":\"tags-module--bannerImgContainer--3E-wP\",\"bannerImg\":\"tags-module--bannerImg--zPmD6\"};"],"sourceRoot":""}